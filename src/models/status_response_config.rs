/*
 * Cortex API
 *
 * API for Cortex, a powerful observable analysis and active response engine.
 *
 * The version of the OpenAPI document: 3.1.8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatusResponseConfig {
    #[serde(rename = "protectDownloadsWith", skip_serializing_if = "Option::is_none")]
    pub protect_downloads_with: Option<String>,
    #[serde(rename = "authType", skip_serializing_if = "Option::is_none")]
    pub auth_type: Option<Box<models::StatusResponseConfigAuthType>>,
    #[serde(rename = "capabilities", skip_serializing_if = "Option::is_none")]
    pub capabilities: Option<Vec<String>>,
    #[serde(rename = "ssoAutoLogin", skip_serializing_if = "Option::is_none")]
    pub sso_auto_login: Option<bool>,
}

impl StatusResponseConfig {
    pub fn new() -> StatusResponseConfig {
        StatusResponseConfig {
            protect_downloads_with: None,
            auth_type: None,
            capabilities: None,
            sso_auto_login: None,
        }
    }
}

