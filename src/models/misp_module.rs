/*
 * Cortex API
 *
 * API for Cortex, a powerful observable analysis and active response engine.
 *
 * The version of the OpenAPI document: 3.1.8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MispModule : Structure of a MISP module as returned by Cortex.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MispModule {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "mispattributes", skip_serializing_if = "Option::is_none")]
    pub mispattributes: Option<Box<models::MispModuleMispattributes>>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<Box<models::MispModuleMeta>>,
}

impl MispModule {
    /// Structure of a MISP module as returned by Cortex.
    pub fn new() -> MispModule {
        MispModule {
            name: None,
            r#type: None,
            mispattributes: None,
            meta: None,
        }
    }
}

