/*
 * Cortex API
 *
 * API for Cortex, a powerful observable analysis and active response engine.
 *
 * The version of the OpenAPI document: 3.1.8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StreamStatusResponse {
    /// Remaining time in seconds for the session/token.
    #[serde(rename = "remaining", skip_serializing_if = "Option::is_none")]
    pub remaining: Option<i64>,
    /// Whether a warning state is active (e.g., session about to expire).
    #[serde(rename = "warning", skip_serializing_if = "Option::is_none")]
    pub warning: Option<bool>,
}

impl StreamStatusResponse {
    pub fn new() -> StreamStatusResponse {
        StreamStatusResponse {
            remaining: None,
            warning: None,
        }
    }
}

