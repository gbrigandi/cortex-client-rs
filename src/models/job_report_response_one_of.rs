/*
 * Cortex API
 *
 * API for Cortex, a powerful observable analysis and active response engine.
 *
 * The version of the OpenAPI document: 3.1.8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// JobReportResponseOneOf : Status string if job is not completed or failed.
/// Status string if job is not completed or failed.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobReportResponseOneOf {
    #[serde(rename = "Running")]
    Running,
    #[serde(rename = "Waiting")]
    Waiting,
    #[serde(rename = "Deleted")]
    Deleted,

}

impl std::fmt::Display for JobReportResponseOneOf {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Running => write!(f, "Running"),
            Self::Waiting => write!(f, "Waiting"),
            Self::Deleted => write!(f, "Deleted"),
        }
    }
}

impl Default for JobReportResponseOneOf {
    fn default() -> JobReportResponseOneOf {
        Self::Running
    }
}

